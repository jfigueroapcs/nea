---
import { API_URL }  from "@/consts.ts"


export interface Props {
    tables: any;
    delegations: any;
    type?: string;
}
const { tables, delegations, type } = Astro.props;
const tableKeys = Object.keys(tables)
const apiUrl =  API_URL



console.log("apiUrl ===>", type)


---
{
    // @ts-ignore
    tableKeys.map(key => {
    // const { head, data } = tables[key]
    const { head, data } = tables[key]
    // console.log("data  ===>>> ", data)
    const newData = type === 'small' ? data.slice(0,5) : data
    return(
        <>
            <div class="panel-box" style="margin: 40px 0 10px 0">
                <div class="titles no-margin">
                    <h4 style="text-transform: capitalize">{key}</h4>
                </div>
            </div>
            <table class={`table-striped table-responsive table-hover result-point ${type}`}>
                <thead class="point-table-head">
                <tr>
                    {
                    head.map((h:any, hidx:number) => <th class={`${hidx <= 1 ? 'text-left' : 'text-center'}`}>{h}</th>)
                    }
                </tr>
                </thead>

                <tbody class="text-center">
                    {
                        
                        newData.map((d:any, didx:number) => {
                            // console.log(d[head[0]])
                            const dataKeys = Object.keys(d)
                            // console.log(dataKeys)
                            const del = delegations.find((delegation:any) => delegation.name === d[dataKeys[1]] )
                            
                            return(
                                <tr>

                                    <tr>
                                        <td class="text-left number">
                                            {d[dataKeys[0]]}
                                        </td>
                                        <td class="text-left">
                                            <img src={`${apiUrl}img/users/${del?.picture}`} alt="Poland" />
                                            <span>{d[dataKeys[1]]}</span>
                                        </td>
                                        <td>{d[dataKeys[2]]}</td>
                                        <td>{d[dataKeys[3]]}</td>
                                        <td>{d[dataKeys[4]]}</td>
                                        <td>{d[dataKeys[5]]}</td>
                                    </tr>
                                </tr>
                            )
                        })
                    }

                </tbody>
            </table>

        </>
    )
    })
}

